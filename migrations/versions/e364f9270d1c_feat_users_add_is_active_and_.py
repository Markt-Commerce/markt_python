"""feat(users): add is_active and deactivated_at to User and Buyer models, and add 'DELETED' to product status enum

Revision ID: e364f9270d1c
Revises: d66e01aa5e2e
Create Date: 2025-07-14 17:22:44.089741

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e364f9270d1c'
down_revision = 'd66e01aa5e2e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('buyers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('deactivated_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('deactivated_at', sa.DateTime(), nullable=True))

    # --- Product status enum update ---
    # Create new enum type with 'DELETED' (using uppercase to match original)
    new_products_status_enum = postgresql.ENUM(
        'ACTIVE', 'DRAFT', 'ARCHIVED', 'OUT_OF_STOCK', 'DELETED',
        name='products_status_new'
    )
    new_products_status_enum.create(op.get_bind())
    # Alter column to use new enum
    op.execute("ALTER TABLE products ALTER COLUMN status TYPE products_status_new USING status::text::products_status_new")
    # Drop the old enum and rename the new one
    op.execute("DROP TYPE products_status")
    op.execute("ALTER TYPE products_status_new RENAME TO products_status")
    # --- End product status enum update ---
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # --- Product status enum revert ---
    old_products_status_enum = postgresql.ENUM(
        'ACTIVE', 'DRAFT', 'ARCHIVED', 'OUT_OF_STOCK',
        name='products_status_old'
    )
    old_products_status_enum.create(op.get_bind())
    # Note: This will fail if there are any products with 'DELETED' status
    op.execute("ALTER TABLE products ALTER COLUMN status TYPE products_status_old USING status::text::products_status_old")
    op.execute("DROP TYPE products_status")
    op.execute("ALTER TYPE products_status_old RENAME TO products_status")
    # --- End product status enum revert ---
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('deactivated_at')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('buyers', schema=None) as batch_op:
        batch_op.drop_column('deactivated_at')
        batch_op.drop_column('is_active')

    # ### end Alembic commands ###
