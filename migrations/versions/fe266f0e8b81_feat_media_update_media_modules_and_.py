"""feat(media): update media modules and update socials post model

Revision ID: fe266f0e8b81
Revises: e364f9270d1c
Create Date: 2025-07-18 04:32:12.231292

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fe266f0e8b81'
down_revision = 'e364f9270d1c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create new MediaVariantType enum with all values
    mediavarianttype_enum = postgresql.ENUM(
        'ORIGINAL', 'THUMBNAIL', 'SMALL', 'MEDIUM', 'LARGE', 
        'MOBILE', 'TABLET', 'DESKTOP', 
        'SOCIAL_SQUARE', 'SOCIAL_STORY', 'SOCIAL_POST', 
        name='mediavarianttype'
    )
    mediavarianttype_enum.create(op.get_bind())
    
    op.create_table('social_media_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.String(length=12), nullable=True),
    sa.Column('media_id', sa.Integer(), nullable=True),
    sa.Column('platform', sa.String(length=50), nullable=True),
    sa.Column('post_type', sa.String(length=50), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('aspect_ratio', sa.String(length=20), nullable=True),
    sa.Column('optimized_for_platform', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['media_id'], ['media.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('post_media')
    with op.batch_alter_table('media', schema=None) as batch_op:
        batch_op.add_column(sa.Column('original_filename', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('processing_status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('background_removed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('compression_quality', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('exif_data', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('processing_error', sa.Text(), nullable=True))

    with op.batch_alter_table('media_variants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('quality', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('format', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('processing_time', sa.Float(), nullable=True))
        # Update variant_type column to use new enum
        batch_op.alter_column('variant_type',
            existing_type=sa.Enum('ORIGINAL', 'THUMBNAIL', 'MEDIUM', 'LARGE', 'SMALL', name='mediavarianttype'),
            type_=sa.Enum('ORIGINAL', 'THUMBNAIL', 'SMALL', 'MEDIUM', 'LARGE', 'MOBILE', 'TABLET', 'DESKTOP', 'SOCIAL_SQUARE', 'SOCIAL_STORY', 'SOCIAL_POST', name='mediavarianttype'),
            existing_nullable=True,
            postgresql_using='variant_type::text::mediavarianttype')


    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
        batch_op.create_foreign_key('fk_posts_category_id', 'categories', ['category_id'], ['id'])

    with op.batch_alter_table('request_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('media_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('sort_order', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_request_images_media_id', 'media', ['media_id'], ['id'])
        batch_op.drop_column('image_url')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('request_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_constraint('fk_request_images_media_id', type_='foreignkey')
        batch_op.drop_column('sort_order')
        batch_op.drop_column('media_id')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint('fk_posts_category_id', type_='foreignkey')
        batch_op.drop_column('tags')
        batch_op.drop_column('category_id')

    with op.batch_alter_table('media_variants', schema=None) as batch_op:
        # Revert variant_type column to original enum
        batch_op.alter_column('variant_type',
            existing_type=sa.Enum('ORIGINAL', 'THUMBNAIL', 'SMALL', 'MEDIUM', 'LARGE', 'MOBILE', 'TABLET', 'DESKTOP', 'SOCIAL_SQUARE', 'SOCIAL_STORY', 'SOCIAL_POST', name='mediavarianttype'),
            type_=sa.Enum('ORIGINAL', 'THUMBNAIL', 'MEDIUM', 'LARGE', 'SMALL', name='mediavarianttype'),
            existing_nullable=True,
            postgresql_using='variant_type::text::mediavarianttype')
        batch_op.drop_column('processing_time')
        batch_op.drop_column('format')
        batch_op.drop_column('quality')

    with op.batch_alter_table('media', schema=None) as batch_op:
        batch_op.drop_column('exif_data')
        batch_op.drop_column('compression_quality')
        batch_op.drop_column('background_removed')
        batch_op.drop_column('processing_status')
        batch_op.drop_column('original_filename')
        batch_op.drop_column('processing_error')

    op.create_table('post_media',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('media_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('media_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='post_media_post_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='post_media_pkey')
    )
    op.drop_table('social_media_posts')
    
    # ### end Alembic commands ###
